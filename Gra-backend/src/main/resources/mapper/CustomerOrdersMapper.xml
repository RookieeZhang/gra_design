<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yupi.springbootinit.mapper.CustomerOrdersMapper">

    <resultMap id="BaseResultMap" type="com.yupi.springbootinit.model.entity.CustomerOrders">
            <id property="id" column="id" jdbcType="INTEGER"/>
            <result property="customer_id" column="customer_id" jdbcType="INTEGER"/>
            <result property="product_id" column="product_id" jdbcType="INTEGER"/>
            <result property="region_id" column="region_id" jdbcType="INTEGER"/>
            <result property="sales_channel" column="sales_channel" jdbcType="VARCHAR"/>
            <result property="order_date" column="order_date" jdbcType="DATE"/>
            <result property="order_quantity" column="order_quantity" jdbcType="INTEGER"/>
            <result property="order_amount" column="order_amount" jdbcType="DECIMAL"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,customer_id,product_id,
        region_id,sales_channel,order_date,
        order_quantity,order_amount,order_satisfaction_config_id
    </sql>

    <select id="listByTime" resultType="com.yupi.springbootinit.model.vo.ChartVO">
        SELECT
            DATE_FORMAT(order_date, '%Y-%m-%d') AS date,  <!-- 格式化日期为 'yyyy-MM-dd' -->
            products.brand AS brand,
            products.specification AS specification,
            products.price_level AS priceLevel,
            regions.affiliated_region AS region
        FROM
            customer_orders join products on customer_orders.product_id = products.id join regions on customer_orders.region_id = regions.id
        WHERE
            order_date BETWEEN #{before} AND #{now}
    </select>

    <select id="listBySalesChannel" resultType="com.yupi.springbootinit.model.vo.OrderSatisfactionVO">
        SELECT products.brand            AS brand,
               products.specification    AS specification,
               products.price_level      AS priceLevel,
               regions.affiliated_region AS region,
               sales_channel             AS salesChannel,
               order_quantity            AS orderQuantity,
               order_satisfaction_config.delivery_limit AS deliveryLimit,
               order_satisfaction_config.customer_category AS customerCategory
        FROM customer_orders
                 join products on customer_orders.product_id = products.id
                 join regions on customer_orders.region_id = regions.id
                 join order_satisfaction_config on customer_orders.order_satisfaction_config_id = order_satisfaction_config.id
        WHERE sales_channel = #{salesChannel}
    </select>
</mapper>
